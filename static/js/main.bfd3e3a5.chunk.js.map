{"version":3,"sources":["i18n/config.ts","pages/Navbars.tsx","pages/Footer.tsx","pages/Layout.tsx","pages/NotFound.tsx","components/MetaInfo.tsx","components/AudioButton.tsx","utils.ts","components/Buttons.tsx","components/Clips.tsx","components/Sings.tsx","pages/Home/Home.tsx","pages/About/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","ja","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","Navbars","useTranslation","t","changeLng","code","changeLanguage","Navbar","bg","variant","expand","Brand","href","title","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","onClick","Footer","target","rel","icon","version","Layout","children","Container","fluid","NotFound","useEffect","window","location","pathname","notificationClassName","MetaInfo","memo","description","seo","Helmet","defer","process","sizes","type","name","content","image","siteUpdatedAt","property","url","displayName","forwardRef","props","ref","useState","progress","setProgress","playing","setPlaying","useImperativeHandle","getProgress","updateProgress","updatePlaying","isPlaying","disabled","getDescription","desc","lng","startsWith","Buttons","currentLng","language","groups","voice_lists","nowPlaying","Set","totalButtons","map","g","voice_list","reduce","v","i","concat","totalButton","length","refs","useMemo","Array","from","createRef","group","Card","Header","group_description","Body","voice","path","item","indexOf","current","timer","forEach","pause","delete","console","log","setup_timer","clear_timer","setInterval","prog","Number","audio","currentTime","duration","toFixed","Infinity","isNaN","smooth_end","play_end_timer","clearInterval","Audio","load","navigator","mediaSession","metadata","artist","album","artwork","MediaMetadata","playbackState","addEventListener","volume","play","add","group_name","Clips","clips","clip_lists","Accordion","defaultActiveKey","as","eventKey","Row","clip","Col","xs","md","replace","Sings","sings","sing_lists","sing","Home","metaInfo","Date","AboutLink","AboutInfo","Media","About","Title","lg","Table","bordered","hover","responsive","emoji_list","emoji","image_urls","text","role","App","htmlAttributes","lang","dir","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","faGithub","faTwitter","faYoutube","faCopy","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd3e3a5.chunk.js","sourcesContent":["import i18n from 'i18next';\n\nimport en from './en/translation.json';\nimport ja from './ja/translation.json';\n\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nexport const resources = {\n  en: {\n    translation: en\n  },\n  ja: {\n    translation: ja\n  },\n} as const;\n\ni18n.use(LanguageDetector).use(initReactI18next).init({\n  fallbackLng: 'en',\n  resources,\n});\n","import { FunctionComponent } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav';\nimport { useTranslation } from 'react-i18next'\nimport { NavDropdown } from 'react-bootstrap';\n\nconst Navbars: FunctionComponent = () => {\n  const { t, i18n } = useTranslation();\n\n  const changeLng = (code: string) => {\n    i18n.changeLanguage(code);\n  };\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\" title={t('site.title')}>\n        <img\n          alt={t('site.title')}\n          src=\"/android-chrome-192x192.png\"\n          width=\"32\"\n          height=\"32\"\n          className=\"d-inline-block align-top\"\n        />{' '}\n        {t('site.title')}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/about\">{t('pages.about.text')}</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <Nav>\n        <NavDropdown title={t('site.switch_language')} id=\"nav-dropdown\">\n          <NavDropdown.Item onClick={() => changeLng('en')}>en</NavDropdown.Item>\n          <NavDropdown.Item onClick={() => changeLng('ja')}>ja</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar>\n  )\n};\n\nexport default Navbars;\n","import { FunctionComponent } from 'react';\nimport { useTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { version } from '../../package.json';\n\nconst Footer: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <footer className='footer'>\n      <div className='buttons'>\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          title='GitHub Issues'\n          className='button is-medium'\n          href='https://github.com/mirea-button/mirea-button.github.io/issues'\n        >\n          <FontAwesomeIcon icon={['fab', 'github']} />\n        </a>\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          title={`${t('site.mirea')} Twitter`}\n          className='button is-medium'\n          href='https://twitter.com/Kazakura_Mirea'\n        >\n          <FontAwesomeIcon icon={['fab', 'twitter']} />\n        </a>\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          title={`${t('site.mirea')} Youtube`}\n          className='button is-medium'\n          href='https://www.youtube.com/channel/UCIumx9FItlv6B_JsHVMjVYA'\n        >\n          <FontAwesomeIcon icon={['fab', 'youtube']} />\n        </a>\n      </div>\n      <div className='content'>\n        {t('site.title')} v{version} &copy; 2021\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { FunctionComponent, Fragment } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbars from './Navbars';\nimport Footer from './Footer';\n\nconst Layout: FunctionComponent = ({ children }) => (\n  <Fragment>\n    <Navbars />\n    <Container fluid>\n      {children}\n    </Container>\n    <Footer />\n  </Fragment>\n);\n\nexport default Layout;\n","import { useEffect, FunctionComponent } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound: FunctionComponent = () => {\n  useEffect(() => {\n    if (window.location.pathname !== '/404') {\n      window.location.href = '/404';\n    }\n  }, []);\n\n  const notificationClassName = `notification tile is-child is-danger ${window?.location.pathname === '/404' ? 'rubberBand-animation' : 'hide'}`;\n\n  return (\n    <section className='container view-wrapper'>\n      <div className='tile is-parent is-8 is-vertical is-notification-tile is-not-found-tile'>\n        <div className={notificationClassName}>\n          <div>\n            {/* <FontAwesomeIcon icon='exclamation-circle' size='2x' /> */}\n            <span className='title'>404 Not Found</span>\n          </div>\n          <p className='subtitle'>The requested page could not be found.</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import { memo } from 'react';\nimport Helmet from 'react-helmet';\n\ntype MetaInfoProps = {\n  title: string,\n  description: string,\n  seo: any,\n}\n\nconst MetaInfo = memo<MetaInfoProps>(({ title, description, seo }) => (\n  <Helmet defer={true}>\n    <title>{title}</title>\n    <link rel=\"icon\" href={`${process.env.REACT_APP_GITHUB_URL}/favicon.ico`} />\n    <link rel=\"manifest\" href={`${process.env.REACT_APP_GITHUB_URL}/manifest.json`} />\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${process.env.REACT_APP_GITHUB_URL}/apple-touch-icon.png`} />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${process.env.REACT_APP_GITHUB_URL}/favicon-32x32.png`} />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${process.env.REACT_APP_GITHUB_URL}/favicon-16x16.png`} />\n\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={seo.image} />\n    <meta name=\"site-updated-at\" content={seo.siteUpdatedAt} />\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:url\" content={seo.url} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={seo.image} />\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:image:alt\" content={description} />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:url\" content={seo.url} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"twitter:image\" content={seo.image} />\n    <meta name=\"twitter:image:alt\" content={description} />\n    <link rel=\"canonical\" href={seo.url} />\n  </Helmet>\n));\n\nMetaInfo.displayName = 'MetaInfo';\n\nexport default MetaInfo;\n","import { forwardRef, useImperativeHandle, useState } from 'react';\r\n\r\nimport './AudioButton.css';\r\n\r\ninterface AudioButtonProps {\r\n  name: string;\r\n  path: string;\r\n  description: string;\r\n  onClick: Function\r\n}\r\n\r\nexport default forwardRef((props: AudioButtonProps, ref) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [playing, setPlaying] = useState(false);\r\n  useImperativeHandle(ref, () => ({\r\n    id() { return props.name; },\r\n    getProgress() {\r\n      return progress;\r\n    },\r\n    updateProgress(progress: number) {\r\n      setProgress(progress);\r\n    },\r\n    updatePlaying(isPlaying: boolean) {\r\n      setPlaying(isPlaying);\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <button\r\n      className={`mirea-btn ${playing && 'active'}`}\r\n      onClick={() => props.onClick()}\r\n      disabled={playing}\r\n    >\r\n      <div className=\"back\"><div className=\"rotating\">🌸</div></div>\r\n      <div className=\"front\">{props.description}</div>\r\n    </button>\r\n  )\r\n});\r\n","const getDescription = (desc: any, lng: string) => {\n  if (lng === 'en' || lng.startsWith('en-')) {\n    return desc.en;\n  }\n  if (lng === 'ja' || lng.startsWith('ja-')) {\n    return desc.ja;\n  }\n  return lng in desc ? desc[lng] : desc['en'];\n}\n\nexport {\n  getDescription,\n}\n","import { FunctionComponent, Fragment, createRef, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Card from 'react-bootstrap/Card';\n\nimport AudioButton from './AudioButton';\nimport { getDescription } from './../utils';\n\nimport voice_lists from '../assets/voices.json';\n\ninterface Voice {\n  name: string;\n  path: string;\n  description: { [index: string]: any; };\n};\n\ninterface VoiceGroup {\n  group_name: string;\n  group_description: { [index: string]: any; };\n  voice_list: Voice[];\n};\n\ninterface VoiceGroups {\n  groups: VoiceGroup[];\n};\n\nconst Buttons: FunctionComponent = () => {\n  const { t, i18n } = useTranslation();\n  const currentLng: string = `${i18n.language}`;\n  const voiceGroups: VoiceGroups = voice_lists;\n  const groups: VoiceGroup[] = voiceGroups.groups;\n\n  const overlap = false;\n  const random = false;\n  const repeat = false;\n  const nowPlaying = new Set();\n\n  const totalButtons = groups.map(g=>g.voice_list).reduce((v, i) => v.concat(i), []).map(v => v.name);\n  const totalButton = totalButtons.length;\n  const refs= useMemo(\n    () => Array.from({ length: totalButton }).map(() => createRef()),\n    [totalButton]\n  );\n\n  const play = (item: Voice) => {\n    const ref: any = refs[totalButtons.indexOf(item.name)].current;\n    let timer: any = null;\n    if (!overlap) {\n      nowPlaying.forEach((i: any) => {\n        i.pause();\n        nowPlaying.delete(i);\n        console.log(item.name, 'paused before new playing');\n      });\n    }\n    let setup_timer = () => {\n      if (timer !== null) clear_timer();\n      timer = setInterval(() => {\n        let prog = Number(((audio.currentTime / audio.duration) * 100).toFixed(2));\n        if (prog !== Infinity && !isNaN(prog)) {\n          ref.updateProgress(prog);\n        } else {\n          ref.updateProgress(0);\n        }\n      }, 50);\n    };\n    let smooth_end = () => {\n      let play_end_timer: any = setInterval(() => {\n        ref.updateProgress(ref.getProgress() - 5);\n        if (ref.getProgress() <= 0) {\n          clearInterval(play_end_timer);\n          play_end_timer = null;\n        }\n      }, 50);\n      ref.updatePlaying(false);\n    };\n    let clear_timer = () => {\n      clearInterval(timer);\n      timer = null;\n    };\n    let audio = new Audio(`/voices/${item.path}`);\n    audio.load(); //This could fix iOS playing bug\n    if (navigator.mediaSession) {\n      const metadata = {\n        title: overlap ? t('control.overlap_title') : getDescription(item.description, currentLng),\n        artist: t('control.full_name'),\n        album: t('site.title'),\n        artwork: [{ src: `/img/media-cover.png`, sizes: '512x512', type: 'image/png' }]\n      };\n      navigator.mediaSession.metadata = new MediaMetadata(metadata);\n      navigator.mediaSession.playbackState = 'playing';\n    }\n    audio.addEventListener('canplay', () => {\n      audio.volume = 1;\n      audio.play();\n      nowPlaying.add(audio);\n      ref.updatePlaying(true);\n      setup_timer();\n    });\n    audio.addEventListener('ended', () => {\n      if (repeat) {\n        audio.play();\n        nowPlaying.add(audio);\n        ref.updatePlaying(true);\n        setup_timer();\n      } else if (random) {\n        // play_random_voice();\n      } else {\n        smooth_end();\n        clear_timer();\n        nowPlaying.delete(audio);\n      }\n    });\n    audio.addEventListener('pause', () => {\n      // console.log(item.name, 'paused');\n      smooth_end();\n      //if (!this.repeat) {\n      clear_timer();\n      nowPlaying.delete(audio);\n      //}\n      if (navigator.mediaSession) {\n        navigator.mediaSession.playbackState = 'paused';\n      }\n    });\n    // $bus.$on('abort_play', () => {\n    //   audio.pause();\n    //   smooth_end();\n    //   clear_timer();\n    //   nowPlaying.delete(audio);\n    //   delete audio;\n    // });\n  };\n\n  return (\n    <Fragment>\n      {groups.map((group: VoiceGroup) => (\n        <Card key={group.group_name} className=\"mt-2 mb-2\">\n          <Card.Header>\n            <h5>{getDescription(group.group_description, currentLng) || ''}</h5>\n          </Card.Header>\n          <Card.Body>\n            {group.voice_list.map((voice: Voice) => (\n              <AudioButton key={voice.name}\n                name={voice.name}\n                path={voice.path}\n                description={getDescription(voice.description, currentLng) || ''}\n                onClick={() => play(voice)}\n                ref={refs[totalButtons.indexOf(voice.name)]}\n              ></AudioButton>\n            ))}\n          </Card.Body>\n        </Card>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Buttons;\n","import { FunctionComponent, Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { getDescription } from './../utils';\n\nimport clip_lists from '../assets/clips.json';\n\ninterface Clip {\n  name: string;\n  url: string;\n  description: { [index: string]: any; };\n  source: string;\n};\n\nconst Clips: FunctionComponent = () => {\n  const { i18n } = useTranslation();\n  const currentLng: string = `${i18n.language}`;\n  const clips: Clip[] = clip_lists;\n\n  return (\n    <Fragment>\n      <Accordion defaultActiveKey=\"0\" className=\"mt-2 mb-2\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            <h5>Clips🎞️</h5>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Row>\n                {clips.map((clip: Clip) => (\n                  <Col xs={12} md={4} key={clip.name}>\n                    <div className=\"embed-responsive embed-responsive-16by9\">\n                      <iframe title={getDescription(clip.description, currentLng)} className=\"embed-responsive-item\" src={clip.url.replace(\"watch?v=\", \"embed/\")}></iframe>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Fragment>\n  );\n};\n\nexport default Clips;\n","import { FunctionComponent, Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { getDescription } from './../utils';\n\nimport sing_lists from '../assets/sings.json';\n\ninterface Sing {\n  name: string;\n  url: string;\n  description: { [index: string]: any; };\n};\n\nconst Sings: FunctionComponent = () => {\n  const { i18n } = useTranslation();\n  const currentLng: string = `${i18n.language}`;\n  const sings: Sing[] = sing_lists;\n\n  return (\n    <Fragment>\n      <Accordion defaultActiveKey=\"0\" className=\"mt-2 mb-2\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            <h5>Sings🎤🎶🎵</h5>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Row>\n                {sings.map((sing: Sing) => (\n                  <Col xs={12} md={4} key={sing.name}>\n                    <div className=\"embed-responsive embed-responsive-16by9\">\n                      <iframe title={getDescription(sing.description, currentLng)} className=\"embed-responsive-item\" src={sing.url.replace(\"watch?v=\", \"embed/\")}></iframe>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Fragment>\n  );\n};\n\nexport default Sings;\n","import { FunctionComponent, Fragment } from 'react';\nimport { useTranslation } from 'react-i18next'\nimport MetaInfo from '../../components/MetaInfo';\nimport Buttons from '../../components/Buttons';\nimport Clips from '../../components/Clips';\nimport Sings from '../../components/Sings';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport './Home.css';\n\nconst Home: FunctionComponent = () => {\n  const { t } = useTranslation();\n  const metaInfo = {\n    title: t('pages.home.title'),\n    description: t('pages.home.description'),\n    seo: {\n      image: `${process.env.REACT_APP_GITHUB_URL}/${t('pages.home.image')}`,\n      url: `${process.env.REACT_APP_GITHUB_URL}`,\n      siteUpdatedAt: new Date(),\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaInfo {...metaInfo} />\n      <Row>\n        <Col>\n          <Buttons />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Sings />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Clips />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default Home;\n","import { Fragment, FunctionComponent } from 'react';\nimport { useTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Media, Row, Col, Card, Table } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport MetaInfo from '../../components/MetaInfo';\n\nimport emoji_list from '../../assets/emoji.json';\n\ninterface Emoji {\n  name: string;\n  image_urls: string[];\n  code: string;\n};\n\nconst AboutLink: FunctionComponent<{ title: string, href: string }> = ({ title, href }) => {\n  return (\n    <a target='_blank' rel='noopener noreferrer' title={title} href={href}>{title}</a>\n  );\n};\n\nconst AboutInfo: FunctionComponent = () => {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <Row>\n        <Col>\n          <Card className=\"mt-2 mb-2\">\n            <Card.Body>\n              <Media>\n                <img\n                  width={32}\n                  height={32}\n                  className=\"mr-3\"\n                  src=\"/img/CgDfX7qcJM_J-APK1YKgCA.png\"\n                  alt={t('pages.about.text')}\n                />\n                <Media.Body>\n                  <h5>{t('pages.about.text')}</h5>\n                  <p>\n                    {t('pages.about.about_us.1')}\n                  </p>\n                  <p>\n                    {t('pages.about.about_us.2')}<AboutLink title='Kazakura Mirea' href='https://twitter.com/Kazakura_Mirea' />.\n                  </p>\n                  <p>\n                    {t('pages.about.about_us.3')}<AboutLink title='GitHub Issues' href='https://github.com/mirea-button/mirea-button.github.io/issues' />.\n                  </p>\n                </Media.Body>\n              </Media>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card className=\"mt-2 mb-2\">\n            <Card.Body>\n              <Media>\n                <img\n                  width={50}\n                  height={50}\n                  className=\"mr-3\"\n                  src=\"/android-chrome-512x512.png\"\n                  alt={t('site.kazakura_mirea')}\n                />\n                <Media.Body>\n                  <h5>{t('site.kazakura_mirea')}</h5>\n                  <p>\n                    {t('pages.about.about_mirea.1')}\n                  </p>\n                  <div>\n                    {t('pages.about.about_mirea.2')}\n                    <ul>\n                      <li><AboutLink title='Youtube' href='https://www.youtube.com/channel/UCIumx9FItlv6B_JsHVMjVYA' /></li>\n                      <li><AboutLink title='Twitter' href='https://twitter.com/Kazakura_Mirea' /></li>\n                      <li><AboutLink title='Streamlabs' href='https://streamlabs.com/mireakazakura/tip' /></li>\n                      <li><AboutLink title='FANBOX' href='https://kazakura-mirea.fanbox.cc' /></li>\n                      <li><AboutLink title='Wishlist' href='https://www.amazon.co.jp/hz/wishlist/ls/EHW9SUO553A4?ref_=wl_share' /></li>\n                      <li><AboutLink title='Marshmallow' href='https://marshmallow-qa.com/kazakura_mirea?utm_medium=url_text&utm_source=promotion' /></li>\n                    </ul>\n                  </div>\n                </Media.Body>\n              </Media>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nconst About: FunctionComponent = () => {\n  const { t } = useTranslation();\n  const metaInfo = {\n    title: t('pages.about.title'),\n    description: t('pages.about.description'),\n    seo: {\n      image: `${process.env.REACT_APP_GITHUB_URL}/${t('pages.home.image')}`,\n      url: `${process.env.REACT_APP_GITHUB_URL}/about`,\n      siteUpdatedAt: new Date(),\n    }\n  };\n  return (\n    <Fragment>\n      <MetaInfo {...metaInfo} />\n      <AboutInfo />\n      <Row>\n        <Col>\n          <Card className=\"mt-2 mb-2\">\n            <Card.Body>\n              <Card.Title>Emoji</Card.Title>\n              <Row>\n                <Col xs lg=\"6\">\n                  <Table bordered hover responsive>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Code</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {emoji_list.map((emoji: Emoji) => (\n                        <tr key={emoji.name}>\n                          <td>\n                            {emoji.image_urls.map((url: string) => (\n                              url.indexOf('img/') >= 0 ? (\n                                <img\n                                  key={url}\n                                  width={32}\n                                  height={32}\n                                  className=\"mr-3\"\n                                  src={url}\n                                  alt={emoji.code}\n                                />) : (<span key={url}>{url}</span>)\n                            ))}\n                          </td>\n                          <td>\n                            <CopyToClipboard text={emoji.code}>\n                              <code role=\"button\">{emoji.code}</code>\n                            </CopyToClipboard>\n                            {' '}\n                            <CopyToClipboard text={emoji.code}>\n                              <FontAwesomeIcon title=\"Copy code\" role=\"button\" icon={['far', 'copy']} />\n                            </CopyToClipboard>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </Card.Body>\n            {/* <Card.Img variant=\"bottom\" src=\"/img/og-image.jpg\" /> */}\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default About;\n","import './i18n/config';\nimport Layout from './pages/Layout';\nimport NotFound from './pages/NotFound';\nimport Home from './pages/Home/Home';\nimport About from './pages/About/About';\nimport { Route, Switch } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const { i18n } = useTranslation();\n\n  return (\n    <BrowserRouter>\n      <Helmet htmlAttributes={{ lang: i18n.language, dir: i18n.dir() }} />\n      <Layout>\n        <Switch>\n          <Route\n            path='/about'\n            component={About}\n          />\n          <Route\n            path='/'\n            component={Home}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faGithub,\n  faTwitter,\n  faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport {\n  faCopy,\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  faGithub,\n  faTwitter,\n  faYoutube,\n  faCopy\n);\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}